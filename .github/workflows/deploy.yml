name: Deploy-Master

on: 
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: write 
  discussions: write

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-ver.outputs.ver }}
    steps:
      - uses: actions/checkout@v2
      - name: Set Tag
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Get Version
        id: get-ver
        run: |
          echo "ver=`echo '${{ env.tag }}' | grep -Eo '[0-9]+.[0-9]+.[0-9]+'`" >> $GITHUB_OUTPUT
  
  ubuntu-build-test:
    needs: get-version
    uses: ./.github/workflows/ubuntu.yml
    with: 
      mx-rebuild: false
      build-tests: true
      build-type: Release
      upload-artifact: true
      version: ${{ needs.get-version.outputs.version }}
  
  windows-build-test:
    needs: get-version
    uses: ./.github/workflows/windows.yml
    with: 
      mx-rebuild: false
      build-tests: true
      build-type: Release
      upload-artifact: true
      version: ${{ needs.get-version.outputs.version }}
      
  deploy:
    environment:
      name: production
    needs: [windows-build-test, ubuntu-build-test, get-version]
    runs-on: ubuntu-latest
    steps:
      - name: Get Ubuntu Artifact
        uses: actions/download-artifact@v4
        with:
          name: mfpg_artifact_ubuntu

      - name: Get Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: mfpg_artifact_windows

      - name: Compress Artifacts Ubuntu 
        run: |
          mv mfpg/mfpg_build/mfpg_gui_linux-v${{ inputs.version }} .
          mv mfpg/mfpg_build/mfpg_cli_linux-v${{ inputs.version }} .
          mv mfpg/resources/xrc/resources.xrc .
          sudo tar -cf mfpg_linux.tar mfpg_gui_linux-v${{ inputs.version }} mfpg_cli_linux-v${{ inputs.version }} resources.xrc

      - name: Compress Artifact Windows
        run: |
          mv mfpg_build/Release/mfpg_gui_x86-v${{ needs.get-version.outputs.version }}.exe .
          mv mfpg_build/Release/mfpg_cli_x86-v${{ needs.get-version.outputs.version }}.exe .
          mv resources/xrc/resources.xrc .
          zip -r mfpg_windows.zip mfpg_gui_x86-v${{ needs.get-version.outputs.version }}.exe mfpg_cli_x86-v${{ needs.get-version.outputs.version }}.exe resources.xrc

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
         files: |
           mfpg_windows.zip
           mfpg_linux.tar
