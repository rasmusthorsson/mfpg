on:
    workflow_call:
        inputs:
            os:
                required: true
                type: string
            c-compiler:
                required: true
                type: string
            cxx-compiler:
                required: true
                type: string
            mx-rebuild:
                required: false
                type: boolean
                default: false
            build-tests:
                required: false
                type: boolean
                default: true
            build-type:
                required: false
                type: string
                default: Release

jobs:
    build:
        runs-on: ${{ inputs.os }}
        steps:

            #On ubuntu we get the packages through apt.
            - name: Get GTK Ubuntu
              if: inputs.os == 'ubuntu-latest'
              run: |
                sudo apt-get install libgtk-3-dev
                sudo apt-get install libwxgtk3.0-gtk3-0v5
                sudo apt-get install libwxgtk3.0-gtk3-dev
            
            - uses: actions/checkout@v3
              with:
                path: mfpg
                submodules: 'true'

            - name: Configure MFPG
              run: >
                cmake mfpg
                -B mfpg/mfpg_build
                -DCMAKE_CXX_COMPILER=${{ inputs.cxx-compiler }}
                -DCMAKE_C_COMPILER=${{ inputs.c-compiler }}
                -DCMAKE_BUILD_TYPE=${{ inputs.build-type }}
                -DREBUILD_MX=${{ inputs.mx-rebuild }}
                -DBUILD_TESTS=${{ inputs.build-tests }}
                -DWXW_ROOT_DIR="C:/Program Files (x86)/wxWidgets"
                -DWXW_LIB_DIR="C:/Program Files (x86)/wxWidgets/lib/vc_x64_lib"
                -DWXW_INC_DIR="C:/Program Files (x86)/wxWidgets/include"
                
            - name: Build MFPG
              run: > 
                cmake 
                --build mfpg/mfpg_build 
                --config ${{ inputs.build-type }}

            - name: Test MFPG
              working-directory: mfpg/mfpg_build
              run: >
                ctest 
                --output-on-failure
                --build-config ${{ inputs.build-type }}
