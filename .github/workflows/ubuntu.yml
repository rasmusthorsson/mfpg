name: Ubuntu

on:
  workflow_call:
      inputs:
          mx-rebuild:
              required: false
              type: boolean
              default: false
          build-tests:
              required: false
              type: boolean
              default: true
          build-type:
              required: false
              type: string
              default: Release
          upload-artifact:
              required: false
              type: boolean
              default: false
          version:
              required: false
              type: string
              default: "0.0.0"

jobs:
  ubuntu-build-test-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Get GTK Ubuntu
        run: |
          sudo apt-get update
          sudo apt-get install libgtk-3-dev

      - name: tar Command Permissions
        run: sudo chown root /bin/tar && sudo chmod u+s /bin/tar

      - name: Cache WX Ubuntu
        id: cache-wx-ubuntu
        uses: actions/cache@v3
        with:
          path: /usr/local/wx_build/
          key: wx-build-3.2.4-ubuntu
          restore-keys: wx-build-3.2.4-ubuntu

      - name: Checkout WX Ubuntu
        if: steps.cache-wx-ubuntu.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          repository: WxWidgets/WxWidgets
          ref: v3.2.4
          path: ${{ github.workspace }}/wxWidgets
          submodules: 'true'

      - name: Configure WX Ubuntu
        if: steps.cache-wx-ubuntu.outputs.cache-hit != 'true'
        run: >
          cmake ${{ github.workspace  }}/wxWidgets
          -DCMAKE_INSTALL_PREFIX='/usr/local/wx_build'
          -DwxBUILD_SHARED=OFF
          -B ${{ github.workspace }}/wx-build-ubuntu

      - name: Build WX Ubuntu
        if: steps.cache-wx-ubuntu.outputs.cache-hit != 'true'
        run: > 
          sudo cmake --build ${{ github.workspace }}/wx-build-ubuntu --target install --config Release 
      
      - uses: actions/checkout@v3
        with:
          path: mfpg
          submodules: 'true'

      - name: Configure MFPG
        run: >
          cmake mfpg
          -B mfpg/mfpg_build
          -DCMAKE_CXX_COMPILER=g++
          -DCMAKE_C_COMPILER=gcc
          -DCMAKE_BUILD_TYPE=${{ inputs.build-type }}
          -DREBUILD_MX=${{ inputs.mx-rebuild }}
          -DBUILD_TESTS=${{ inputs.build-tests }}
          -DVER=${{ inputs.version }}
          
      - name: Build MFPG
        run: > 
          cmake 
          --build mfpg/mfpg_build 
          --config ${{ inputs.build-type }} 

      - name: Test MFPG
        working-directory: mfpg/mfpg_build
        run: >
          ctest 
          --output-on-failure
          --build-config ${{ inputs.build-type }}
             
      - name: Upload Artifact Ubuntu 
        if: inputs.upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: mfpg_artifact_ubuntu
          path: | 
            mfpg/mfpg_build/mfpg_gui_linux-v${{ inputs.version }}
            mfpg/mfpg_build/mfpg_cli_linux-v${{ inputs.version }}
            mfpg/resources/xrc/resources.xrc
